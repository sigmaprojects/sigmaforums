/*A general event handler. This is a dummy one, please remove and create real ones.*/component singleton=true {		property name="ORMService" inject="coldbox:plugin:ORMService";	property name="sessionStorage" inject="coldbox:plugin:SessionStorage";	property name="userService"	inject="model:userService@solitary";	property name="user_InformationService"	inject="model:user_InformationService@SigmaForums";	property name="subscriptionService"	inject="model:subscriptionService@SigmaForums";		// OPTIONAL HANDLER PROPERTIES	this.event_cache_suffix = "";	this.prehandler_only 	= "";	this.prehandler_except 	= "";	this.posthandler_only 	= "";	this.posthandler_except = "";	// Allowed HTTP Methods Ex: this.allowedMethods = {delete='POST,DELETE',index='GET'}	this.allowedMethods = {};		/**	IMPLICIT FUNCTIONS: Uncomment to use	void function preHandler(event,action) output=false{		var rc = event.getCollection();	}	void function postHandler(event,action) output=false{		var rc = event.getCollection();	}	void function onMissingAction(event,missingAction) output=false{	}	*/	void function index(event) output=false{		var rc = event.getCollection();		setNextEvent(event='forums.users.editProfile',varStruct=rc);	}	void function editProfile(event) output=false{		var rc = event.getCollection();		rc.user = userService.get(sessionStorage.getVar('user').userID);		rc.userInformation = user_InformationService.get(rc.user.getUserID() );		if(IsNull(rc.userInformation)) {			rc.userInformation = user_InformationService.new();		}		event.setView('forums/users/editProfile');	}	void function editSignature(event) output=false{		var rc = event.getCollection();		rc.user = userService.get(sessionStorage.getVar('user').userID);		rc.userInformation = user_InformationService.get(rc.user.getUserID() );		if(IsNull(rc.userInformation)) {			rc.userInformation = user_InformationService.new();		}		event.setView('forums/users/editSignature');	}	void function editNotifications(event) output=false{		var rc = event.getCollection();		rc.user = userService.get(sessionStorage.getVar('user').userID);		rc.userInformation = user_InformationService.get(rc.user.getUserID() );		var criteria = {userid=sessionStorage.getVar('user').userID};		rc.subscriptions = subscriptionService.list(criteria=criteria,sortOrder=event.getValue('sortOrder','created desc'),asQuery=false);		if(IsNull(rc.userInformation)) {			rc.userInformation = user_InformationService.new();		}		event.setView('forums/users/editNotifications');	}	void function saveProfile(event) output=false {		rc.user = userService.get(sessionStorage.getVar('user').userID);		rc.userInformation = user_InformationService.get(rc.user.getUserID() );		if(IsNull(rc.userInformation)) {			rc.userInformation = user_InformationService.new();		}		if (structKeyExists(form, "avatar___file") and len(form.avatar___file) gt 0) {			var tempPath = getTempDirectory() &  CreateUUID();			getPlugin("FileUtils").uploadFile(fileField="avatar___file",destination=tempPath);			rc.avatar = getMyPlugin('ImageManipulation',true,'SigmaForums').setImage( ImageRead(tempPath) ).aspectCrop(100,100).getBinary();			rc.userInformation.setAvatar(rc.avatar);		};		populateModel(rc.userInformation);		if(!event.getValue('auto_subscribe',false)) {			rc.userInformation.setAuto_Subscribe(false);
		}		rc.userInformation.setUser(rc.User);		EntitySave(rc.userInformation);		getPlugin("MessageBox").setMessage("info","Your profile was saved.");		setNextEvent(event='forums.users.editProfile',varStruct=rc);	}	void function editRemoveSubscription(event) output=false {		var rc = event.getCollection();		var CompositeKey = {			topicid	= rc.topicid,			userid	= sessionStorage.getVar('user').userID		};		var subscription = subscriptionService.get( CompositeKey );		subscriptionService.delete( subscription );		getPlugin("MessageBox").setMessage("info","Subscription Removed.");		setNextEvent(event='forums.users.editNotifications',varStruct=rc);	}}