/*	This is gonna end up being a huge handler*/component singleton=true {		//property name="ORMService" inject="coldbox:plugin:ORMService";	property name="sessionStorage"			inject="coldbox:plugin:SessionStorage";	property name="userService"				inject="model:userService@solitary";	property name="areaService"				inject="model:areaService@SigmaForums";	property name="sectionService"			inject="model:sectionService@SigmaForums";	property name="topicService"			inject="model:topicService@SigmaForums";	property name="replyService"			inject="model:replyService@SigmaForums"; 	property name="topicStatusService"		inject="model:topicStatusService@SigmaForums";	property name="user_InformationService"	inject="model:user_InformationService@SigmaForums";	property name="subscriptionService"		inject="model:subscriptionService@SigmaForums";	property name="configBean"				inject="coldbox:configBean";				// OPTIONAL HANDLER PROPERTIES	this.event_cache_suffix = "";	this.prehandler_only 	= "";	this.prehandler_except 	= "";	this.posthandler_only 	= "";	this.posthandler_except = "";	// Allowed HTTP Methods Ex: this.allowedMethods = {delete='POST,DELETE',index='GET'}	this.allowedMethods = {};		void function preHandler(event,action) output=false{		//this is an ugly workaround		var rc = event.getCollection();		var user = sessionStorage.getVar('user','');		if(isNull( user ) || IsSimpleValue( user )) {			rc.userid = '';
		} else {			rc.userid = user.userid;			rc.user = user.userid;			user_InformationService.createDefaultIfNull( rc.userid );
		}				//i bet there's a better DSL for the inject property, instead of this		rc.repliesPerPage = configBean.getKey("modules").SigmaForums.settings.repliesPerPage;		rc.topicsPerPage = configBean.getKey("modules").SigmaForums.settings.topicsPerPage;			}		/**	void function postHandler(event,action) output=false{		var rc = event.getCollection();	}	void function onMissingAction(event,missingAction) output=false{	}	*/	void function index(event) output=false{		var rc = event.getCollection();		rc.Areas = areaService.getAll();		rc.topicStatusService = topicStatusService;		rc.title = 'Forums'; 	}	void function topics(event) output=false {		var rc = event.getCollection();				rc.section = sectionService.get(rc.SectionID);				rc.count = topicService.count("section_id=#rc.SectionID#");		rc.Paging = getMyPlugin("paging",true,'SigmaForums');		//rc.Paging.setPagingMaxRows( 10 );		rc.Paging.setPagingMaxRows( rc.topicsPerPage );		rc.boundaries = rc.Paging.getBoundaries();		var criteria = {section_id=rc.SectionID};		rc.Topics = topicService.list(criteria=criteria,sortOrder=event.getValue('sortOrder','lastpost desc'),asQuery=false,offset=rc.boundaries.startrow-1,max=rc.Paging.getPagingMaxRows());		rc.topicStatusService = topicStatusService;				rc.title = "#rc.Section.getArea().getTitle()# - #rc.Section.getTitle()#";
	}	void function replies(event) output=false {		var rc = event.getCollection();		/*		var userid = sessionStorage.getVar('user').userID;		*/		rc.Topic = topicService.get( rc.TopicID );		topicService.addView(rc.Topic);				topicStatusService.saveStoredTopicStatusForUser( rc.TopicID, rc.userID );		subscriptionService.resetSentTrigger( rc.TopicID, rc.userID );				rc.count = replyService.count("TopicID=#rc.TopicID#");		rc.Paging = getMyPlugin("paging",true,'SigmaForums');		rc.Paging.setPagingMaxRows( rc.repliesPerPage );		rc.boundaries = rc.Paging.getBoundaries();		var criteria = {topic_id=rc.TopicID};			rc.Replies = replyService.list(criteria=criteria,sortOrder=event.getValue('sortOrder','created asc'),asQuery=false,offset=rc.boundaries.startrow-1,max=rc.Paging.getPagingMaxRows());		//for the quick reply include		rc.Reply = replyService.get(event.getValue('ReplyID',0));		rc.title = "#rc.Topic.getSection().getArea().getTitle()# - #rc.Topic.getSection().getTitle()# - #rc.Topic.getTitle()#";	}	void function editTopic(event) output=false {		var rc = event.getCollection();		rc.topic = topicService.get(event.getValue('topicID',0));				rc.Section = sectionService.get(rc.sectionID);		rc.Sections = sectionService.getAll();	}	void function saveTopic(event) output=false {		var rc = event.getCollection();		if( topicService.exists(event.getValue('topicID',0)) ) {			rc.Topic = topicService.get(event.getValue('TopicID'));		} else {			rc.Topic = topicService.new();		}		rc.user = userService.get(sessionStorage.getVar('user').userID);		rc.section = sectionService.get( rc.SectionID );		rc.Reply = replyService.new();		populateModel(rc.Reply);		populateModel(rc.Topic);		rc.Topic.addReply(rc.Reply); //just in case?		replyService.save(rc.Reply);		topicService.save(rc.Topic);		//EntitySave(rc.Reply);		//EntitySave(rc.Topic);		getPlugin("MessageBox").setMessage("info","Topic '<strong>#rc.Topic.getTitle()#</strong>' Posted.");		setNextEvent(event='forums.replies/#rc.Topic.getTopicID()#/#rc.Topic.getTitle()#',varStruct=rc);
	}	void function editReply(event) output=false {		var rc = event.getCollection();		rc.Reply = replyService.get(event.getValue('ReplyID',0));		rc.Topic = topicService.get(event.getValue('TopicID',0));		if(StructKeyExists(rc,'quote') && replyService.exists(rc.quote)) {			rc.quotedReply = replyService.get(rc.quote);		}	}	void function saveReply(event) outout=false {		var rc = event.getCollection();		if( replyService.exists(event.getValue('replyID',0)) ) {			rc.Reply = replyService.get(event.getValue('replyID'));		} else {			rc.Reply = replyService.new();		}				rc.topic = topicService.get( rc.TopicID );		populateModel(rc.Reply);		rc.Topic.addReply(rc.Reply);		replyService.save(rc.Reply);		getPlugin("MessageBox").setMessage("info","Your repy was Posted.");		setNextEvent(event='forums.replies/#rc.Topic.getTopicID()#/#rc.Topic.getTitle()#',varStruct=rc);
	}}